name: Version and Publish

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  version-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_BOT_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci
        working-directory: ./task-launcher

      - name: Bump package version
        run: |
          npm version ${{ github.event.inputs.version-type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        working-directory: ./task-launcher

      - name: Bump version and create tag
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: ${{ github.event.inputs.version-type }}
          RELEASE_BRANCHES: main
          SKIP_TAG: true  # Skip tag creation as we'll do it manually

      - name: Create and push git tag
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump_package_version.outputs.new_version }}"
          git tag -a "v${{ steps.bump_package_version.outputs.new_version }}" -m "Release v${{ steps.bump_package_version.outputs.new_version }}"
          git push origin main
          git push origin "v${{ steps.bump_package_version.outputs.new_version }}"
        working-directory: ./task-launcher

      - name: Publish to npm
        run: npm publish --access public
        working-directory: ./task-launcher
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-dashboard:
    needs: version-and-publish
    runs-on: ubuntu-latest

    steps:
      # Checkout the levante-dashboard repository
      - name: Checkout dashboard repository
        uses: actions/checkout@v4
        with:
          repository: levante-framework/levante-dashboard
          token: ${{ secrets.GIT_BOT_TOKEN }}
          working-directory: levante-dashboard

      # Set up Node.js for the dashboard repository
      - name: Set up Node.js for levante-dashboard
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # Install dependencies for levante-dashboard
      - name: Install dependencies for levante-dashboard
        run: npm install
        working-directory: levante-dashboard

      # Update the @levante-framework/core-tasks version in levante-dashboard's package.json
      - name: Update dependency version
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          npm install @levante-framework/core-tasks@${{ needs.version-and-publish.outputs.new_version }}
          git add package.json package-lock.json
          git commit -m "chore: update core-tasks to ${{ needs.version-and-publish.outputs.new_version }}"
          git push origin main
        working-directory: levante-dashboard
