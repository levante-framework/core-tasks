name: Version and Publish

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  version-and-publish:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump_package_version.outputs.new_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_BOT_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci
        working-directory: ./task-launcher

      - name: Bump package version
        id: bump_package_version
        run: |
          npm version ${{ github.event.inputs.version-type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        working-directory: ./task-launcher

      - name: Create and push git tag
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump_package_version.outputs.new_version }}"
          git tag -a "v${{ steps.bump_package_version.outputs.new_version }}" -m "Release v${{ steps.bump_package_version.outputs.new_version }}"
          git push origin main
          git push origin "v${{ steps.bump_package_version.outputs.new_version }}"
        working-directory: ./task-launcher

      - name: Publish to npm
        run: npm publish --access public
        working-directory: ./task-launcher
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-dashboard:
    needs: version-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.LEVANTE_BOT_APP_ID }}
          private_key: ${{ secrets.LEVANTE_BOT_APP_PRIVATE_KEY }}
          repository: levante-framework/levante-dashboard

      - name: Trigger dashboard update
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ steps.generate_token.outputs.token }}
          repository: levante-framework/levante-dashboard
          event-type: update-core-tasks
          client-payload: '{"version": "${{ needs.version-and-publish.outputs.new_version }}"}'
